# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: pwd

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          find .
          export -p
          dpkg -l

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      # Install stable SWI-Prolog using Chocolatey. GitHub's Windows runner
      # comes pre-equipped with Chocolatey. Sets up the latest **stable**
      # release rather than the development version.
      - name: Chocolatey install SWI-Prolog
        run: choco install SWI-Prolog

      # Update the session environment for the path to SWI-Prolog. GitHub Action
      # steps do not retain session information in-between steps.
      # Running `refreshenv` does **not** work.
      # Import-Module $env:ChocolateyInstall\helpers\chocolateyInstaller.psm1
      # Update-SessionEnvironment
      - name: Load and run Prolog unit tests
        run: |
          Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1
          Update-SessionEnvironment
          swipl -g "load_test_files([])" -g run_tests
